table:
  schema: public
  name: dns_hosted_zones
object_relationships:
  - name: community
    using:
      foreign_key_constraint_on: community_id
array_relationships:
  - name: certificates
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: certificates
        insertion_order: null
        column_mapping:
          id: dns_hosted_zone_id
  - name: dns_records
    using:
      foreign_key_constraint_on:
        column: dns_hosted_zone_id
        table:
          schema: public
          name: dns_records
insert_permissions:
  - role: user
    permission:
      check:
        community:
          community_users:
            user_id:
              _eq: X-Hasura-User-Id
      columns:
        - id
        - community_id
        - domain_name
        - comment
        - created_at
        - updated_at
        - response
        - ns_ok
        - status
        - is_external_domain
      backend_only: false
select_permissions:
  - role: user
    permission:
      columns:
        - comment
        - community_id
        - created_at
        - domain_name
        - id
        - is_external_domain
        - ns_ok
        - response
        - status
        - updated_at
      filter:
        community:
          community_users:
            user_id:
              _eq: X-Hasura-User-Id
update_permissions:
  - role: user
    permission:
      columns:
        - comment
        - created_at
        - domain_name
        - id
        - is_external_domain
        - ns_ok
        - response
        - status
        - updated_at
      filter:
        community:
          community_users:
            user_id:
              _eq: X-Hasura-User-Id
      check: null
event_triggers:
  - name: create_certificate
    definition:
      enable_manual: true
      update:
        columns:
          - ns_ok
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook: '{{API_DOMAINS_URL}}/events/create-certificate'
