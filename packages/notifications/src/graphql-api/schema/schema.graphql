scalar JSON

type Result {
  message_id: String!
  payload: JSON
}

type NotifyResponse {
  status: String!
  results: [Result]
}

type Message {
  from_email: String
  msg_id: String
  subject: String
  to_email: String
  status: String
  opens_count: Int
  clicks_count: Int
  last_event_time: String
}

type ActivittyFeedResponse {
  messages: [Message]
}

input NotifyInput {
  email_from: String!
  email_to: String!
  subject: String!
  body: String!
  context: JSON
}

input ActivittyFeedFilter {
  widget_id: Int!
}

type Query {
  activity_feed(filter: ActivittyFeedFilter): ActivittyFeedResponse
}

type Mutation {
  notify(input: [NotifyInput!]!): NotifyResponse
}