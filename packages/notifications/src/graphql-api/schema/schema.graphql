scalar JSON

type Result {
  message_id: String!
  payload: JSON
}

type NotifyResponse {
  status: String!
  results: [Result]
}

type ActivityFeedEvent {
  event_type: String
  total: Int
}

type ActivityFeed {
  email: String
  total: Int
  events: [ActivityFeedEvent]
}

type ActivityFeedResponse {
  data: [ActivityFeed]
  after: String
}

input Attachement {
  content: String!
  filename: String!
  type: String!
  disposition: String!
}

input NotifyInput {
  email_from: String!
  email_to: String!
  subject: String!
  body: String!
  attachments: [Attachement]
  context: JSON
  trackingSettings: JSON
}

input ActivityFeedFilter {
  widget_id: Int!
  offset: Int
  after: String
}

type ActivityFeedTotalResponse {
  total: Int
  min_timestamp: Int
  max_timestamp: Int
  events: [ActivityFeedEvent]
}

type ActivityFeedTimestampResponse {
  min_timestamp: Int
  max_timestamp: Int
}

type Query {
  activity_feed(filter: ActivityFeedFilter): ActivityFeedResponse
  activity_feed_total(widget_id: Int!): ActivityFeedTotalResponse
  activity_feed_timestamp: ActivityFeedTimestampResponse
}

type Mutation {
  notify(input: [NotifyInput!]!): NotifyResponse
}